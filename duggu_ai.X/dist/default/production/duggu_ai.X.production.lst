

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Apr 05 19:37:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F452 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   003F81                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for _run
    56   003F81  01                 	db	1
    57   000000                     _LATB	set	3978
    58   000000                     _TRISB	set	3987
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63   003F84                     __pcinit:
    64                           	callstack 0
    65   003F84                     start_initialization:
    66                           	callstack 0
    67   003F84                     __initialization:
    68                           	callstack 0
    69                           
    70                           ; Initialize objects allocated to COMRAM (1 bytes)
    71                           ; load TBLPTR registers with __pidataCOMRAM
    72   003F84  0E81               	movlw	low __pidataCOMRAM
    73   003F86  6EF6               	movwf	tblptrl,c
    74   003F88  0E3F               	movlw	high __pidataCOMRAM
    75   003F8A  6EF7               	movwf	tblptrh,c
    76   003F8C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    77   003F8E  6EF8               	movwf	tblptru,c
    78   003F90  0009               	tblrd		*+	;fetch initializer
    79   003F92  CFF5 F001          	movff	tablat,__pdataCOMRAM
    80   003F96                     end_of_initialization:
    81                           	callstack 0
    82   003F96                     __end_of__initialization:
    83                           	callstack 0
    84   003F96  0100               	movlb	0
    85   003F98  EFCE  F01F         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	dataCOMRAM
    88   000001                     __pdataCOMRAM:
    89                           	callstack 0
    90   000001                     _run:
    91                           	callstack 0
    92   000001                     	ds	1
    93                           
    94                           	psect	cstackCOMRAM
    95   000002                     __pcstackCOMRAM:
    96                           	callstack 0
    97   000002                     ??_main:
    98                           
    99                           ; 1 bytes @ 0x0
   100   000002                     	ds	1
   101                           
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   104 ;;
   105 ;; *************** function _main *****************
   106 ;; Defined at:
   107 ;;		line 17 in file "main.c"
   108 ;; Parameters:    Size  Location     Type
   109 ;;		None
   110 ;; Auto vars:     Size  Location     Type
   111 ;;		None
   112 ;; Return value:  Size  Location     Type
   113 ;;                  1    wreg      void 
   114 ;; Registers used:
   115 ;;		wreg, status,2, status,0, prodl, prodh
   116 ;; Tracked objects:
   117 ;;		On entry : 0/0
   118 ;;		On exit  : 0/0
   119 ;;		Unchanged: 0/0
   120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   121 ;;      Params:         0       0       0       0       0       0       0
   122 ;;      Locals:         0       0       0       0       0       0       0
   123 ;;      Temps:          1       0       0       0       0       0       0
   124 ;;      Totals:         1       0       0       0       0       0       0
   125 ;;Total ram usage:        1 bytes
   126 ;; This function calls:
   127 ;;		Nothing
   128 ;; This function is called by:
   129 ;;		Startup code after reset
   130 ;; This function uses a non-reentrant model
   131 ;;
   132                           
   133                           	psect	text0
   134   003F9C                     __ptext0:
   135                           	callstack 0
   136   003F9C                     _main:
   137                           	callstack 31
   138   003F9C  FFFF               	dw	65535	; assembler added errata NOP
   139                           
   140                           ;main.c: 18:     TRISB = 0;
   141   003F9E  0E00               	movlw	0
   142   003FA0  6E93               	movwf	147,c	;volatile
   143                           
   144                           ;main.c: 19:     LATB = 1;
   145   003FA2  0E01               	movlw	1
   146   003FA4  6E8A               	movwf	138,c	;volatile
   147   003FA6                     l13:
   148   003FA6  FFFF               	dw	65535	; assembler added errata NOP
   149                           
   150                           ;main.c: 21:         LATB = 0;
   151   003FA8  0E00               	movlw	0
   152   003FAA  6E8A               	movwf	138,c	;volatile
   153   003FAC                     
   154                           ;main.c: 22:         _delay((unsigned long)((250)*(1000000/4000.0)));
   155   003FAC  0E3D               	movlw	61
   156   003FAE  6E02               	movwf	??_main^0,c
   157   003FB0  0EEA               	movlw	234
   158   003FB2                     u27:
   159   003FB2  FFFF               	dw	65535	; errata NOP
   160   003FB4  2EE8               	decfsz	wreg,f,c
   161   003FB6  D7FD               	bra	u27
   162   003FB8  2E02               	decfsz	??_main^0,f,c
   163   003FBA  D7FB               	bra	u27
   164   003FBC                     
   165                           ;main.c: 23:         LATB = run;
   166   003FBC  C001  FF8A         	movff	_run,3978	;volatile
   167   003FC0                     
   168                           ;main.c: 24:         _delay((unsigned long)((250)*(1000000/4000.0)));
   169   003FC0  0E3D               	movlw	61
   170   003FC2  6E02               	movwf	??_main^0,c
   171   003FC4  0EEA               	movlw	234
   172   003FC6                     u37:
   173   003FC6  FFFF               	dw	65535	; errata NOP
   174   003FC8  2EE8               	decfsz	wreg,f,c
   175   003FCA  D7FD               	bra	u37
   176   003FCC  2E02               	decfsz	??_main^0,f,c
   177   003FCE  D7FB               	bra	u37
   178   003FD0                     
   179                           ;main.c: 26:         if (run >= 0x80) {
   180   003FD0  0E7F               	movlw	127
   181   003FD2  6401               	cpfsgt	_run^0,c
   182   003FD4  EFEE  F01F         	goto	u11
   183   003FD8  EFF1  F01F         	goto	u10
   184   003FDC                     u11:
   185   003FDC  FFFF               	dw	65535	; assembler added errata NOP
   186   003FDE  EFF6  F01F         	goto	l706
   187   003FE2                     u10:
   188   003FE2  FFFF               	dw	65535	; assembler added errata NOP
   189   003FE4                     
   190                           ;main.c: 27:             run = 1;
   191   003FE4  0E01               	movlw	1
   192   003FE6  6E01               	movwf	_run^0,c
   193                           
   194                           ;main.c: 28:         } else {
   195   003FE8  EFD3  F01F         	goto	l13
   196   003FEC                     l706:
   197   003FEC  FFFF               	dw	65535	; assembler added errata NOP
   198                           
   199                           ;main.c: 29:             run *= 2;
   200   003FEE  0E02               	movlw	2
   201   003FF0  0201               	mulwf	_run^0,c
   202   003FF2  50F3               	movf	prodl,w,c
   203   003FF4  6E01               	movwf	_run^0,c
   204   003FF6  EFD3  F01F         	goto	l13
   205   003FFA  EF01  F000         	goto	start
   206   003FFE                     __end_of_main:
   207                           	callstack 0
   208   003FFE  FFFF               	dw	65535	; assembler added errata NOP
   209                           
   210                           	psect	rparam
   211   000000                     
   212                           	psect	idloc
   213                           
   214                           ;Config register IDLOC0 @ 0x200000
   215                           ;	unspecified, using default values
   216   200000                     	org	2097152
   217   200000  FF                 	db	255
   218                           
   219                           ;Config register IDLOC1 @ 0x200001
   220                           ;	unspecified, using default values
   221   200001                     	org	2097153
   222   200001  FF                 	db	255
   223                           
   224                           ;Config register IDLOC2 @ 0x200002
   225                           ;	unspecified, using default values
   226   200002                     	org	2097154
   227   200002  FF                 	db	255
   228                           
   229                           ;Config register IDLOC3 @ 0x200003
   230                           ;	unspecified, using default values
   231   200003                     	org	2097155
   232   200003  FF                 	db	255
   233                           
   234                           ;Config register IDLOC4 @ 0x200004
   235                           ;	unspecified, using default values
   236   200004                     	org	2097156
   237   200004  FF                 	db	255
   238                           
   239                           ;Config register IDLOC5 @ 0x200005
   240                           ;	unspecified, using default values
   241   200005                     	org	2097157
   242   200005  FF                 	db	255
   243                           
   244                           ;Config register IDLOC6 @ 0x200006
   245                           ;	unspecified, using default values
   246   200006                     	org	2097158
   247   200006  FF                 	db	255
   248                           
   249                           ;Config register IDLOC7 @ 0x200007
   250                           ;	unspecified, using default values
   251   200007                     	org	2097159
   252   200007  FF                 	db	255
   253                           
   254                           	psect	config
   255                           
   256                           ; Padding undefined space
   257   300000                     	org	3145728
   258   300000  FF                 	db	255
   259                           
   260                           ;Config register CONFIG1H @ 0x300001
   261                           ;	Oscillator Selection bits
   262                           ;	OSC = HS, HS oscillator
   263                           ;	Oscillator System Clock Switch Enable bit
   264                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
   265   300001                     	org	3145729
   266   300001  22                 	db	34
   267                           
   268                           ;Config register CONFIG2L @ 0x300002
   269                           ;	Power-up Timer Enable bit
   270                           ;	PWRT = OFF, PWRT disabled
   271                           ;	Brown-out Reset Enable bit
   272                           ;	BOR = OFF, Brown-out Reset disabled
   273                           ;	Brown-out Reset Voltage bits
   274                           ;	BORV = 20, VBOR set to 2.0V
   275   300002                     	org	3145730
   276   300002  0D                 	db	13
   277                           
   278                           ;Config register CONFIG2H @ 0x300003
   279                           ;	Watchdog Timer Enable bit
   280                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   281                           ;	Watchdog Timer Postscale Select bits
   282                           ;	WDTPS = 128, 1:128
   283   300003                     	org	3145731
   284   300003  0E                 	db	14
   285                           
   286                           ; Padding undefined space
   287   300004                     	org	3145732
   288   300004  FF                 	db	255
   289                           
   290                           ;Config register CONFIG3H @ 0x300005
   291                           ;	CCP2 Mux bit
   292                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
   293   300005                     	org	3145733
   294   300005  01                 	db	1
   295                           
   296                           ;Config register CONFIG4L @ 0x300006
   297                           ;	Stack Full/Underflow Reset Enable bit
   298                           ;	STVR = ON, Stack Full/Underflow will cause RESET
   299                           ;	Low Voltage ICSP Enable bit
   300                           ;	LVP = OFF, Low Voltage ICSP disabled
   301                           ;	Background Debugger Enable bit
   302                           ;	DEBUG = 0x1, unprogrammed default
   303   300006                     	org	3145734
   304   300006  81                 	db	129
   305                           
   306                           ; Padding undefined space
   307   300007                     	org	3145735
   308   300007  FF                 	db	255
   309                           
   310                           ;Config register CONFIG5L @ 0x300008
   311                           ;	Code Protection bit
   312                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
   313                           ;	Code Protection bit
   314                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
   315                           ;	Code Protection bit
   316                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
   317                           ;	Code Protection bit
   318                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
   319   300008                     	org	3145736
   320   300008  0F                 	db	15
   321                           
   322                           ;Config register CONFIG5H @ 0x300009
   323                           ;	Boot Block Code Protection bit
   324                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
   325                           ;	Data EEPROM Code Protection bit
   326                           ;	CPD = OFF, Data EEPROM not code protected
   327   300009                     	org	3145737
   328   300009  C0                 	db	192
   329                           
   330                           ;Config register CONFIG6L @ 0x30000A
   331                           ;	Write Protection bit
   332                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
   333                           ;	Write Protection bit
   334                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
   335                           ;	Write Protection bit
   336                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
   337                           ;	Write Protection bit
   338                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
   339   30000A                     	org	3145738
   340   30000A  0F                 	db	15
   341                           
   342                           ;Config register CONFIG6H @ 0x30000B
   343                           ;	Configuration Register Write Protection bit
   344                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
   345                           ;	Boot Block Write Protection bit
   346                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
   347                           ;	Data EEPROM Write Protection bit
   348                           ;	WRTD = OFF, Data EEPROM not write protected
   349   30000B                     	org	3145739
   350   30000B  E0                 	db	224
   351                           
   352                           ;Config register CONFIG7L @ 0x30000C
   353                           ;	Table Read Protection bit
   354                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
   355                           ;	Table Read Protection bit
   356                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
   357                           ;	Table Read Protection bit
   358                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
   359                           ;	Table Read Protection bit
   360                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
   361   30000C                     	org	3145740
   362   30000C  0F                 	db	15
   363                           
   364                           ;Config register CONFIG7H @ 0x30000D
   365                           ;	Boot Block Table Read Protection bit
   366                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
   367   30000D                     	org	3145741
   368   30000D  40                 	db	64
   369                           tosu	equ	0xFFF
   370                           tosh	equ	0xFFE
   371                           tosl	equ	0xFFD
   372                           stkptr	equ	0xFFC
   373                           pclatu	equ	0xFFB
   374                           pclath	equ	0xFFA
   375                           pcl	equ	0xFF9
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           prodh	equ	0xFF4
   381                           prodl	equ	0xFF3
   382                           indf0	equ	0xFEF
   383                           postinc0	equ	0xFEE
   384                           postdec0	equ	0xFED
   385                           preinc0	equ	0xFEC
   386                           plusw0	equ	0xFEB
   387                           fsr0h	equ	0xFEA
   388                           fsr0l	equ	0xFE9
   389                           wreg	equ	0xFE8
   390                           indf1	equ	0xFE7
   391                           postinc1	equ	0xFE6
   392                           postdec1	equ	0xFE5
   393                           preinc1	equ	0xFE4
   394                           plusw1	equ	0xFE3
   395                           fsr1h	equ	0xFE2
   396                           fsr1l	equ	0xFE1
   397                           bsr	equ	0xFE0
   398                           indf2	equ	0xFDF
   399                           postinc2	equ	0xFDE
   400                           postdec2	equ	0xFDD
   401                           preinc2	equ	0xFDC
   402                           plusw2	equ	0xFDB
   403                           fsr2h	equ	0xFDA
   404                           fsr2l	equ	0xFD9
   405                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      1       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      20        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      1       2       1        1.6%
BITBIGSFRh          6C      0       0      16        0.0%
BITBIGSFRll          A      0       0      18        0.0%
BITBIGSFRlh          8      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      19        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Apr 05 19:37:31 2023

                                                           l13 3FA6  
                                                           u10 3FE2  
                                                           u11 3FDC  
                                                           u27 3FB2  
                                                           u37 3FC6  
                                                          l700 3FC0  
                                                          l702 3FD0  
                                                          l704 3FE4  
                                                          l706 3FEC  
                                                          l694 3F9C  
                                                          l696 3FAC  
                                                          l698 3FBC  
                                                          _run 0001  
                                                          wreg 000FE8  
                                                         _LATB 000F8A  
                                                         _main 3F9C  
                                                         prodl 000FF3  
                                                         start 0002  
                                                 ___param_bank 000000  
                                                        ?_main 0002  
                                                        _TRISB 000F93  
                                                        tablat 000FF5  
                                              __initialization 3F84  
                                                 __end_of_main 3FFE  
                                                       ??_main 0002  
                                                __activetblptr 000000  
                                                       isa$std 000001  
                                                 __pdataCOMRAM 0001  
                                                       tblptrh 000FF7  
                                                       tblptrl 000FF6  
                                                       tblptru 000FF8  
                                                   __accesstop 0080  
                                      __end_of__initialization 3F96  
                                                ___rparam_used 000001  
                                               __pcstackCOMRAM 0002  
                                                      __Hparam 0000  
                                                      __Lparam 0000  
                                                      __pcinit 3F84  
                                                      __ramtop 0600  
                                                      __ptext0 3F9C  
                                         end_of_initialization 3F96  
                                                __pidataCOMRAM 3F81  
                                          start_initialization 3F84  
                                                     __Hrparam 0000  
                                                     __Lrparam 0000  
                                                     isa$xinst 000000  
